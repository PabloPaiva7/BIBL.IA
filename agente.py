# MVP do Agente B√≠blico IA usando Streamlit (sem necessidade de API ou chave de acesso externa)

import streamlit as st
import pandas as pd
import random

# Base fict√≠cia de vers√≠culos (voc√™ pode substituir por um CSV depois)
versiculos = [
    {"livro": "Jo√£o", "capitulo": 3, "versiculo": 16, "texto": "Porque Deus amou o mundo de tal maneira...", "tags": "amor, salva√ß√£o"},
    {"livro": "Salmos", "capitulo": 23, "versiculo": 1, "texto": "O Senhor √© o meu pastor, nada me faltar√°.", "tags": "confian√ßa, provis√£o"},
    {"livro": "Romanos", "capitulo": 8, "versiculo": 28, "texto": "Todas as coisas cooperam para o bem...", "tags": "prop√≥sito, esperan√ßa"},
    {"livro": "Prov√©rbios", "capitulo": 3, "versiculo": 5, "texto": "Confia no Senhor de todo o teu cora√ß√£o...", "tags": "juventude, f√©"},
    {"livro": "Ef√©sios", "capitulo": 5, "versiculo": 25, "texto": "Maridos, amai vossas mulheres, como tamb√©m Cristo amou a igreja...", "tags": "casamento, amor"},
]

# Fun√ß√£o para buscar vers√≠culo por tema
def buscar_versiculo_por_tema(tema):
    encontrados = [v for v in versiculos if tema.lower() in v["tags"]]
    return random.choice(encontrados) if encontrados else None

# Fun√ß√£o para devocional personalizado
def devocional_personalizado(perfil):
    if perfil == "Jovem":
        return buscar_versiculo_por_tema("juventude")
    elif perfil == "L√≠der":
        return buscar_versiculo_por_tema("f√©")
    elif perfil == "Casal":
        return buscar_versiculo_por_tema("casamento")
    else:
        return random.choice(versiculos)

# Fun√ß√£o para exegese e an√°lise profunda (simulada)
def exegese_analise(v):
    texto_original = "Texto original em grego/hebraico (simulado)"
    contexto_historico = f"O livro de {v['livro']} foi escrito em um contexto de desafios espirituais espec√≠ficos... (simulado)"
    interpretacao = "Esse vers√≠culo nos encoraja a confiar plenamente em Deus, mesmo sem entender tudo. (simulado)"
    return texto_original, contexto_historico, interpretacao

# Streamlit UI
st.set_page_config(page_title="Agente B√≠blico IA", page_icon="üìñ")
st.title("üìñ Agente B√≠blico MVP")
st.subheader("Explorador de vers√≠culos e devocionais simples")

menu = st.sidebar.selectbox("Escolha uma funcionalidade", [
    "Devocional do Dia",
    "Devocional Di√°rio Personalizado",
    "Buscar por Tema",
    "Vers√≠culo Aleat√≥rio",
    "Exegese e An√°lise Profunda"
])

if menu == "Devocional do Dia":
    st.markdown("### üôè Devocional do Dia")
    v = random.choice(versiculos)
    st.write(f"**{v['livro']} {v['capitulo']}:{v['versiculo']}**")
    st.write(v['texto'])
    st.info("Reflex√£o: Deus cuida de voc√™ em todo tempo. Confie nele!")

elif menu == "Devocional Di√°rio Personalizado":
    st.markdown("### üôè Devocional Di√°rio Personalizado")
    perfil = st.selectbox("Selecione seu perfil:", ["Jovem", "L√≠der", "Casal"])
    if perfil:
        v = devocional_personalizado(perfil)
        if v:
            st.write(f"**{v['livro']} {v['capitulo']}:{v['versiculo']}**")
            st.write(v['texto'])
            st.success(f"Devocional para {perfil}: Que Deus aben√ßoe sua caminhada!")
        else:
            st.warning("Nenhum devocional encontrado para esse perfil.")

elif menu == "Buscar por Tema":
    st.markdown("### üîç Buscar vers√≠culo por tema")
    tema = st.text_input("Digite um tema (ex: amor, esperan√ßa, provis√£o):")
    if tema:
        resultado = buscar_versiculo_por_tema(tema)
        if resultado:
            st.write(f"**{resultado['livro']} {resultado['capitulo']}:{resultado['versiculo']}**")
            st.write(resultado['texto'])
        else:
            st.warning("Tema n√£o encontrado. Tente outro termo.")

elif menu == "Vers√≠culo Aleat√≥rio":
    st.markdown("### üìú Vers√≠culo Aleat√≥rio")
    v = random.choice(versiculos)
    st.write(f"**{v['livro']} {v['capitulo']}:{v['versiculo']}**")
    st.write(v['texto'])

elif menu == "Exegese e An√°lise Profunda":
    st.markdown("### üîç Exegese e An√°lise Profunda")
    v = random.choice(versiculos)
    st.write(f"**{v['livro']} {v['capitulo']}:{v['versiculo']}**")
    st.write(v['texto'])
    st.divider()
    texto_original, contexto, interpretacao = exegese_analise(v)
    st.subheader("üìú Texto Original (simulado)")
    st.write(texto_original)
    st.subheader("üèõ Contexto Hist√≥rico (simulado)")
    st.write(contexto)
    st.subheader("üß† Interpreta√ß√£o (simulado)")
    st.write(interpretacao)